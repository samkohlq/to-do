{"version":3,"sources":["actions/setVisibilityFilter.js","components/Link.js","containers/FilterLink.js","components/Footer.js","actions/createTodo.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","actions/retrieveTodos.js","actions/updateTodo.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","configureStore.js","index.js"],"names":["VisibilityFilters","Link","active","children","onClick","href","e","preventDefault","connect","state","ownProps","filter","setVisibilityFilter","dispatch","type","Footer","FilterLink","createTodo","value","requestCreateTodo","fetch","method","headers","body","JSON","stringify","then","response","console","log","json","todoCreated","input","onSubmit","trim","ref","node","Todo","completed","style","textDecoration","TodoList","this","props","retrieveTodos","todos","updateTodo","map","todo","key","id","React","Component","getVisibleTodos","t","visibilityFilter","requestUpdateTodo","receiveUpdateTodoSuccess","App","VisibleTodoList","initialState","isFetching","action","SHOW_ALL","combineReducers","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9a41b1a.chunk.js","sourcesContent":["export function setVisibilityFilter(filter) {\n  return { type: \"SET_VISIBILITY_FILTER\", filter };\n}\n\nexport const VisibilityFilters = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Link = ({ active, children, onClick }) => {\n  if (active) {\n    return <span>{children}</span>;\n  }\n  return (\n    <a\n      href=\"#somelink\"\n      onClick={e => {\n        e.preventDefault();\n        onClick();\n      }}\n    >\n      {children}\n    </a>\n  );\n};\n\n// validations\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default Link;\n","import { connect } from \"react-redux\";\n\nimport { setVisibilityFilter } from \"../actions/setVisibilityFilter\";\nimport Link from \"../components/Link\";\n\n// extracts data from the store\n// https://react-redux.js.org/using-react-redux/connect-mapstate\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    active: ownProps.filter === state.setVisibilityFilter\n  };\n};\n\n// dispatches actions to the store\n// sends new object to store\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onClick: () => {\n      dispatch(setVisibilityFilter(ownProps.filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n","import React from \"react\";\n\nimport FilterLink from \"../containers/FilterLink\";\nimport { VisibilityFilters } from \"../actions/setVisibilityFilter\";\n\nconst Footer = () => (\n  <p>\n    Show: <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    {\", \"}\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    {\", \"}\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </p>\n);\n\nexport default Footer;\n","export const requestCreateTodo = value => ({\n  type: \"REQUEST_CREATE_TODO\",\n  value\n});\n\nexport const receiveCreateTodoSuccess = todoCreated => ({\n  type: \"RECEIVE_CREATE_TODO_SUCCESS\",\n  todoCreated\n});\n\nexport const createTodo = value => {\n  return dispatch => {\n    dispatch(requestCreateTodo(value));\n    return (\n      fetch(\"https://intense-refuge-66191.herokuapp.com/create-todo\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          value\n        })\n      })\n        // only runs when promise returned by fetch is successful\n        // pulls out body of json and converts it to json\n        .then(response => {\n          console.log(response);\n          return response.json();\n        })\n        // takes in value of new todo and dispatches receiveCreateTodoSuccess action\n        .then(json => {\n          console.log(json);\n          return dispatch(receiveCreateTodoSuccess(json));\n        })\n    );\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { createTodo } from \"../actions/createTodo\";\n\n// defines both logic and presentation - ok for small components\nconst AddTodo = ({ dispatch }) => {\n  let input;\n  return (\n    <div>\n      <form\n        // onSubmit is the event hook\n        onSubmit={e => {\n          e.preventDefault();\n          // if no input, return\n          if (!input.value.trim()) {\n            return;\n          }\n          // dispatch user's input to store\n          dispatch(createTodo(input.value));\n          // reset input value to blank\n          input.value = \"\";\n        }}\n      >\n        {/* shows text box */}\n        <input\n          // assign input node to input variable\n          ref={node => {\n            input = node;\n          }}\n        />\n        {/* calls onSubmit function in form component */}\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  );\n};\n\n// export connected component, ready for import somewhere else\nexport default connect()(AddTodo);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Todo = ({ onClick, completed, value }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? \"line-through\" : \"none\"\n    }}\n  >\n    {value}\n  </li>\n);\n\n// validations\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nexport default Todo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Todo from \"./Todo\";\n\nclass TodoList extends React.Component {\n  // retrieve data when component has mounted\n  componentDidMount() {\n    this.props.retrieveTodos();\n  }\n\n  render() {\n    // deconstructing object and extracting todos, updateTodo\n    const { todos, updateTodo } = this.props;\n    return (\n      <ul>\n        {todos.map(todo => (\n          <Todo key={todo.id} {...todo} onClick={() => updateTodo(todo.id)} />\n        ))}\n      </ul>\n    );\n  }\n}\n\n// validations\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      value: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  updateTodo: PropTypes.func.isRequired\n};\n\nexport default TodoList;\n","import { connect } from \"react-redux\";\n\n// import { createTodo } from \"../actions\";\nimport { createTodo } from \"../actions/createTodo\";\nimport { updateTodo } from \"../actions/updateTodo\";\nimport { retrieveTodos } from \"../actions/retrieveTodos\";\nimport TodoList from \"../components/TodoList\";\n\n// returns an array, filtered if a filter is present\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case \"SHOW_ALL\":\n      return todos;\n    case \"SHOW_COMPLETED\":\n      return todos.filter(t => t.completed);\n    case \"SHOW_ACTIVE\":\n      return todos.filter(t => !t.completed);\n    default:\n      return todos;\n  }\n};\n\n// extracts specific data from the store\n// passes in todos array and visibility filter in current state, calls getVisibleTodos,\n// returns array returned from getVisibleTodos\n// https://react-redux.js.org/using-react-redux/connect-mapstate\nconst mapStateToProps = state => {\n  return {\n    todos: getVisibleTodos(state.todos.todos, state.visibilityFilter)\n  };\n};\n\n// dispatches actions to the store\n// sends new object to store\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => {\n  return {\n    createTodo: value => {\n      // dispatch createTodo action\n      dispatch(createTodo(value));\n    },\n    retrieveTodos: () => {\n      // dispatch retrieveTodo action\n      dispatch(retrieveTodos());\n    },\n    updateTodo: id => {\n      // dispatch updateTodo action on click\n      dispatch(updateTodo(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","export const requestTodos = () => ({\n  type: \"REQUEST_TODOS\"\n});\n\nexport const receiveTodos = todos => ({\n  type: \"RECEIVE_TODOS\",\n  todos\n});\n\nexport const retrieveTodos = () => {\n  return dispatch => {\n    dispatch(requestTodos());\n    return fetch(\"https://intense-refuge-66191.herokuapp.com/retrieve-todos\")\n      .then(response => response.json())\n      .then(json => dispatch(receiveTodos(json)));\n  };\n};\n","export const requestUpdateTodo = id => ({\n  type: \"REQUEST_UPDATE_TODO\",\n  id\n});\n\nexport const receiveUpdateTodoSuccess = id => ({\n  type: \"RECEIVE_UPDATE_TODO_SUCCESS\",\n  id\n});\n\nexport const updateTodo = id => {\n  return dispatch => {\n    dispatch(requestUpdateTodo(id));\n    return (\n      fetch(\"https://intense-refuge-66191.herokuapp.com/update-todo\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ id })\n      })\n        // only runs when promise returned by fetch is successful\n        // pulls out body of json and converts it to json\n        .then(response => {\n          return response.json();\n        })\n        // takes in id of todo and dispatches receiveUpdateTodoSuccess action\n        .then(json => {\n          return dispatch(receiveUpdateTodoSuccess(json.id));\n        })\n    );\n  };\n};\n","import React from \"react\";\n\nimport Footer from \"./Footer\";\nimport AddTodo from \"../containers/AddTodo\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\n\nconst App = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","const initialState = {\n  isFetching: false,\n  todos: []\n};\n\n// initialises state to be an empty array\nfunction todos(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_CREATE_TODO\":\n      return {\n        // spread operator that creates a copy of the array in state\n        ...state,\n        isFetching: true\n      };\n    case \"RECEIVE_CREATE_TODO_SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        todos: [\n          ...state.todos,\n          {\n            id: action.todoCreated.id,\n            value: action.todoCreated.value,\n            completed: action.todoCreated.completed\n          }\n        ]\n      };\n    case \"REQUEST_TODOS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"RECEIVE_TODOS\":\n      return {\n        ...state,\n        isFetching: false,\n        todos: action.todos\n      };\n    case \"REQUEST_UPDATE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map(todo => {\n          // if todo.id matches action.id, copy everything else from state\n          // and set isFetching to true\n          return todo.id === action.id\n            ? {\n                ...todo,\n                isFetching: true\n              }\n            : todo;\n        })\n      };\n    case \"RECEIVE_UPDATE_TODO_SUCCESS\":\n      return {\n        ...state,\n        todos: state.todos.map(todo => {\n          // if todo.id matches action.id, copy everything else from state,\n          // set isFetching to false and flip completed status\n          return todo.id === action.id\n            ? { ...todo, isFetching: false, completed: !todo.completed }\n            : todo;\n        })\n      };\n    default:\n      return state;\n  }\n}\n\nexport default todos;\n","import { VisibilityFilters } from \"../actions/setVisibilityFilter\";\n\nconst { SHOW_ALL } = VisibilityFilters;\n\n// initialises state to be the \"SHOW_ALL\" string\nfunction visibilityFilter(state = SHOW_ALL, action) {\n  switch (action.type) {\n    case \"SET_VISIBILITY_FILTER\":\n      return action.filter;\n    default:\n      return state;\n  }\n}\n\nexport default visibilityFilter;\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport visibilityFilter from \"./visibilityFilter\";\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger();\n\nexport default () =>\n  createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore();\n\nrender(\n  // https://react-redux.js.org/api/provider\n  // <Provider /> makes the Redux store available to any nested components wrapped in the connect() function\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}